{"version":3,"sources":["assets\\Script\\game\\bullet.js"],"names":["TagOfDirection","cc","Enum","up","right","down","left","Class","Component","properties","start","collision_tuwall","collision_wall","collision_tank","init","data","is_enemy","is_shield","is_destroy","moveUp","node","angle","speed","y","destroy","moveLeft","x","moveDown","moveRight","update","dt","direction","map","pos","position","leftPos1","add","v2","leftPos2","rightPos1","rightPos2","upPos1","upPos2","downPos1","downPos2","pos_arr","p_arr","concat","push","i","length","bullet","collisionBullet","tank","collisionBulletAndPlayerTanks","collisionBulletAndEnemyTanks","console","log","live","tank_level","vv","Global","die_tank","tank_hong","initProps","tid","getTiledIdFromPos","zIndex","isGrassland","isGoldWall","isRiver","parent","childrenCount","isHome","bg3","active","game","is_over","gid_pos","getTiledCoordinate","bg1","setTileGIDAt","onDestroy","fire_flower","instantiate","fire_flower_prefab","addChild","level","getComponent"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nvar TagOfDirection = cc.Enum({\r\n    up : 0,\r\n    right : 1,\r\n    down : 2,\r\n    left : 3,\r\n})\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        this.collision_tuwall = false\r\n        this.collision_wall = false\r\n        this.collision_tank = false\r\n    },\r\n\r\n    init(data){\r\n        this.data = data\r\n        this.is_enemy = this.data.is_enemy\r\n       \r\n        this.is_shield = false\r\n        this.is_destroy = false\r\n\r\n      \r\n    },\r\n\r\n    moveUp(){\r\n        this.node.angle = -90 * TagOfDirection.up\r\n        let speed = this.data.speed\r\n        this.node.y += speed\r\n        if (this.node.y >= 728){\r\n            this.collision_wall = true\r\n            this.node.destroy()\r\n        }\r\n    },\r\n\r\n    moveLeft(){\r\n        this.node.angle = -90 * TagOfDirection.left\r\n        let speed = this.data.speed\r\n        this.node.x -= speed\r\n        if (this.node.x <= 0){\r\n            this.collision_wall = true\r\n            this.node.destroy()\r\n        }\r\n    },\r\n\r\n    moveDown(){\r\n        this.node.angle = -90 * TagOfDirection.down\r\n        let speed = this.data.speed\r\n        this.node.y -= speed\r\n        if (this.node.y <= 0){\r\n            this.collision_wall = true\r\n            this.node.destroy()\r\n        }\r\n    },\r\n\r\n    moveRight(){\r\n        this.node.angle = -90 * TagOfDirection.right\r\n        let speed = this.data.speed\r\n        this.node.x += speed\r\n        if (this.node.x >= 728){\r\n            this.collision_wall = true\r\n            this.node.destroy()\r\n        }\r\n    },\r\n\r\n    update (dt) {\r\n        let direction = this.data.direction\r\n        let map = this.data.map\r\n        if (!map) return\r\n        let is_enemy = this.data.is_enemy\r\n        this.is_enemy = is_enemy\r\n        let pos = this.node.position\r\n        // let leftPos1 = pos.add(cc.v2(-4,0))\r\n        // let leftPos2 = pos.add(cc.v2(-4-8,0))\r\n        // let rightPos1 = pos.add(cc.v2(4,0))\r\n        // let rightPos2 = pos.add(cc.v2(4+8,0))\r\n        // let upPos1 = pos.add(cc.v2(0, 4))\r\n        // let upPos2 = pos.add(cc.v2(0, 4+8))\r\n        // let downPos1 = pos.add(cc.v2(0,-4))\r\n        // let downPos2 = pos.add(cc.v2(0,-4-8))\r\n\r\n        let leftPos1 = pos.add(cc.v2(-7,0))\r\n        let leftPos2 = pos.add(cc.v2(-7-14,0))\r\n        let rightPos1 = pos.add(cc.v2(7,0))\r\n        let rightPos2 = pos.add(cc.v2(7+14,0))\r\n        let upPos1 = pos.add(cc.v2(0, 7))\r\n        let upPos2 = pos.add(cc.v2(0, 7+14))\r\n        let downPos1 = pos.add(cc.v2(0,-7))\r\n        let downPos2 = pos.add(cc.v2(0,-7-14))\r\n\r\n        let pos_arr = []\r\n        if (direction == TagOfDirection.up){\r\n            this.moveUp();\r\n            pos_arr = [leftPos1, leftPos2, rightPos1, rightPos2]\r\n        }\r\n        else if (direction == TagOfDirection.left){\r\n            this.moveLeft();\r\n            pos_arr = [upPos1, upPos2, downPos1, downPos2]\r\n        }\r\n        else if (direction == TagOfDirection.down){\r\n            this.moveDown();\r\n            pos_arr = [leftPos1, leftPos2, rightPos1, rightPos2]\r\n        }\r\n        else if (direction == TagOfDirection.right){\r\n            this.moveRight();\r\n            pos_arr = [upPos1, upPos2, downPos1, downPos2]\r\n        }\r\n        // 检查子弹之间的碰撞\r\n        let p_arr = [...pos_arr]\r\n        p_arr.push(pos)\r\n        for (let i=0;i<p_arr.length;i++){\r\n            let bullet = map.collisionBullet(p_arr[i], is_enemy)\r\n            if (bullet){\r\n                bullet.destroy()\r\n                this.node.destroy()\r\n                return\r\n            }\r\n        }\r\n        // 检查子弹和坦克之间的碰撞\r\n        for (let i=0;i<pos_arr.length;i++){\r\n            // 敌人\r\n            if (is_enemy){\r\n                let tank = map.collisionBulletAndPlayerTanks(pos_arr[i])\r\n                if (tank){\r\n                    this.is_shield = tank.is_shield\r\n                    if (!tank.is_shield){\r\n                        \r\n                        tank.node.destroy()\r\n                        this.collision_tank = true\r\n                    }\r\n                    this.node.destroy()\r\n                    return\r\n                }\r\n            }\r\n            // 玩家\r\n            else {\r\n                let tank = map.collisionBulletAndEnemyTanks(pos_arr[i])\r\n                if (tank){\r\n                    console.log(tank.is_shield,11111)\r\n                    if (!tank.is_shield){\r\n                        tank.live--\r\n                        if (tank.live <= 0){\r\n                            let tank_level = tank.tank_level\r\n                            cc.vv.Global.die_tank['tank_'+tank_level]++\r\n                            \r\n                            this.collision_tank = true\r\n                            tank.node.destroy()\r\n                        }\r\n                        else {\r\n                            this.collision_wall = true\r\n                        }\r\n                        if (tank.tank_hong){\r\n                            console.log('红坦克')\r\n                            map.initProps()\r\n                        }\r\n                        this.node.destroy()\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // let pos_arr = [/*leftPos1, leftPos2, rightPos1, rightPos2,*/ upPos1, upPos2, downPos1, downPos2]\r\n        for (let i=0;i<pos_arr.length;i++){\r\n            let tid = map.getTiledIdFromPos(pos_arr[i])\r\n            this.node.zIndex = -1\r\n            if (tid > 0){\r\n                if (cc.vv.Global.isGrassland(tid)){\r\n                    // console.log('草地')\r\n                }\r\n                else if (cc.vv.Global.isGoldWall(tid)){\r\n                    // console.log('金砖')\r\n                    this.collision_wall = true\r\n                    this.node.destroy()\r\n                    return\r\n                }\r\n                else if (cc.vv.Global.isRiver(tid)){\r\n                    // console.log('河')\r\n                    this.node.zIndex = this.node.parent.childrenCount\r\n                }\r\n                else if (cc.vv.Global.isHome(tid)){\r\n                    console.log('家被打，游戏结束')\r\n                    map.bg3.node.active = true\r\n                    this.is_destroy = true\r\n                    cc.vv.Global.game.is_over = true\r\n                }\r\n                else {\r\n                    // console.log(tid,i)\r\n                    this.is_destroy = true\r\n                    let gid_pos = map.getTiledCoordinate(pos_arr[i])\r\n                    map.bg1.setTileGIDAt(0, gid_pos.x, gid_pos.y, 0)\r\n                }\r\n            }\r\n        }\r\n        if (this.is_destroy){\r\n            this.collision_tuwall = true\r\n            this.node.destroy()\r\n        }\r\n    },\r\n\r\n    onDestroy (){\r\n        if (!this.is_shield){\r\n            let fire_flower = cc.instantiate(cc.vv.Global.game.fire_flower_prefab)\r\n            fire_flower.position = this.node.position\r\n            this.node.parent.addChild(fire_flower)\r\n\r\n            let data = {\r\n                level : 1,\r\n                is_enemy : this.is_enemy,\r\n                collision_tuwall : this.collision_tuwall,\r\n                collision_wall : this.collision_wall,\r\n                collision_tank  : this.collision_tank,\r\n            }\r\n            fire_flower.getComponent('fire_flower').init(data)\r\n        }\r\n        this.data.destroy()\r\n        // console.log('bullet destroy')\r\n    }\r\n});\r\n"]}